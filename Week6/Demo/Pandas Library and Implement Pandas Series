{"cells":[{"cell_type":"markdown","metadata":{"id":"9QLyGKEzb6RT"},"source":["<h2><u>Data Science Using Python</u></h2>\n","\n","# Module 6: Data Manipulation\n","\n","<h2>Demo 1: Functionality of Series</h2>\n","\n","In this demo, you will be shown how to create Series in Python and use various attributes and functionality of Series using pandas."]},{"cell_type":"markdown","metadata":{"id":"gg-rDj0zb6RX"},"source":["##### Question 1:\n","\n","    1) Create a pandas Series from a list  x = [13, -5, 7, 19]\n","    2) Create a series using a numpy array having values \"23, 3.0, 7, 11\" and specifying index values as \"a, b, c, d\"\n","    3) Get the values and index of the series of the above series\n","    4) Access individual elements of the string\n","    5) Assign new values to the elements"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PNftRDvkb6RY","outputId":"72955ca6-7df9-40d8-f8db-086a5b4b78ea"},"outputs":[{"output_type":"stream","name":"stdout","text":["0    13\n","1    -5\n","2     7\n","3    19\n","dtype: int64\n"]}],"source":["# Import the required libraries\n","\n","import pandas as pd\n","import numpy as np\n","\n","# 1.1 Create a pandas Series from a list  x = [13, -5, 7, 19]\n","x = [13, -5, 7, 19]\n","s1 = pd.Series(x)\n","\n","# Print the series and observe the default indices created\n","print(s1)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"uXgCBIOdb6RZ"},"outputs":[],"source":["# Notice that the data type is automatically set for the series as 'int64'"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kU8Bk26qb6Ra","outputId":"e9213694-6721-4cf6-ba7e-97429346c266"},"outputs":[{"output_type":"stream","name":"stdout","text":["a    23.0\n","b     3.0\n","c     7.0\n","d    11.0\n","dtype: float64\n"]}],"source":["# 1.2 Create a series using a numpy array\n","\n","y = np.array([23, 3., 7, 11])\n","s2 = pd.Series(y, index=['a', 'b', 'c', 'd'])\n","\n","print(s2)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_iXHOAmib6Ra","outputId":"cd933012-bdff-411d-d223-763ac41c8232"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["dtype('float64')"]},"metadata":{},"execution_count":4}],"source":["# Note that indices are specifies at the time of creation.\n","\n","# Check the data type of the series\n","s2.dtype"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"p1bBeKjYb6Rb"},"outputs":[],"source":["# The data type is set as float since one of the values is a float"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sabtDxfBb6Rb","outputId":"c5523f83-dd0f-4611-c000-f814258a5d09"},"outputs":[{"output_type":"stream","name":"stdout","text":["Values: [23.  3.  7. 11.]\n","Index: Index(['a', 'b', 'c', 'd'], dtype='object')\n"]}],"source":["# 1.3 Get the values and index of the series\n","\n","print(\"Values:\", s2.values)\n","\n","print(\"Index:\", s2.index)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"t7YpvlVBb6Rc","outputId":"9c1eae50-3c01-4f9f-9b96-0b6a0ea51df7"},"outputs":[{"output_type":"stream","name":"stdout","text":["Third element:  7.0\n","First two elements:\n","\n","a    23.0\n","b     3.0\n","dtype: float64\n","Element having index 'd':\n","11.0\n"]}],"source":["# 1.4 Access the elements of Series\n","\n","print(\"Third element: \", s2[2])\n","\n","print(\"First two elements:\\n\")\n","print(s2[0:2])\n","\n","print(\"Element having index 'd':\")\n","print(s2['d'])\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ajlAXz2Bb6Rc","outputId":"3f0a4c1b-2fbc-4122-ce61-d6cf356b532e"},"outputs":[{"output_type":"stream","name":"stdout","text":["a    10.0\n","b    11.0\n","c     7.0\n","d    11.0\n","dtype: float64\n"]}],"source":["# 1.5 Assign new values to the elements\n","\n","s2['a'] = 10\n","\n","s2[1] = 11\n","print(s2)"]},{"cell_type":"markdown","metadata":{"id":"W9vlrbYOb6Rd"},"source":["##### Question 2:\n","\n","From the raw data below create a pandas Series\n","\n","'Amit', 'Bob', 'Kate', 'A', 'b', np.nan, 'Car', 'dog', 'cat'\n","\n","    1) Print all elements in lower case\n","    2) Print all the elements in upper case\t\n","    3) Print the length of all the elements\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LpEnQOTab6Rd","outputId":"7718798e-9ed1-4e37-cbdc-b29a91080e0d"},"outputs":[{"output_type":"stream","name":"stdout","text":["0    amit\n","1     bob\n","2    kate\n","3       a\n","4       b\n","5     NaN\n","6     car\n","7     dog\n","8     cat\n","dtype: object\n"]}],"source":["# 2.1\n","s = pd.Series(['Amit', 'Bob', 'Kate', 'A', 'b', np.nan, 'Car', 'dog', 'cat'])\n","print(s.str.lower())"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gpUCCvMNb6Re","outputId":"2b33007a-2455-41a9-88b4-5c56a4f28111"},"outputs":[{"output_type":"stream","name":"stdout","text":["0    AMIT\n","1     BOB\n","2    KATE\n","3       A\n","4       B\n","5     NaN\n","6     CAR\n","7     DOG\n","8     CAT\n","dtype: object\n"]}],"source":["# 2.2\n","\n","print(s.str.upper()) "]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JpbO2dWgb6Re","outputId":"b00bbae9-e95a-450f-dbf9-773e90e0a861"},"outputs":[{"output_type":"stream","name":"stdout","text":["0    4.0\n","1    3.0\n","2    4.0\n","3    1.0\n","4    1.0\n","5    NaN\n","6    3.0\n","7    3.0\n","8    3.0\n","dtype: float64\n"]}],"source":["# 2.3\n","\n","print(s.str.len())"]},{"cell_type":"markdown","metadata":{"id":"x0w43Uw0b6Rf"},"source":["##### Question 3:\n","\n","From the raw data below create a pandas Series\n","\n","' Arya', 'John ', ' jack ', 'Sam'\n","\n","    1) Print all elements after stripping spaces from the left and right\n","    2) Print all the elements after removing spaces from the left only\n","    3) Print all the elements after removing spaces from the right only\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Z5_hD9-xb6Rf","outputId":"2657b438-13d9-4425-aad1-7b8619f2a92c"},"outputs":[{"output_type":"stream","name":"stdout","text":["Index([' Arya', 'John ', ' jack ', 'Sam'], dtype='object')\n","Index(['Arya', 'John', 'jack', 'Sam'], dtype='object')\n"]}],"source":["# 3.1\n","s = pd.Index([' Arya', 'John ', ' jack ', 'Sam'])\n","\n","print(s)\n","print(s.str.strip())"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Lis-_fxwb6Rf","outputId":"2350d94b-ae1c-4478-9fee-a053a4a850bf"},"outputs":[{"output_type":"stream","name":"stdout","text":["Index(['Arya', 'John ', 'jack ', 'Sam'], dtype='object')\n"]}],"source":["# 3.2\n","\n","print(s.str.lstrip())"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-SzJgpJwb6Rg","outputId":"27b6a1fa-8785-4da7-c6d2-50ca76c01fea"},"outputs":[{"output_type":"stream","name":"stdout","text":["Index([' Arya', 'John', ' jack', 'Sam'], dtype='object')\n"]}],"source":["# 3.3\n","\n","print(s.str.rstrip())"]},{"cell_type":"markdown","metadata":{"id":"svWqnpExb6Rg"},"source":["##### Conclusion: This code demonstrates how to create Series in pandas and use various functionality of series."]}],"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.7.3"},"colab":{"provenance":[]}},"nbformat":4,"nbformat_minor":0}